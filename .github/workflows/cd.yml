name: Piperks Backend Deployment
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      BUILD_APP: 'backend'
      BUILD_STAGE: 'staging'
      AWS_EBS_PLATFORM: 'Node.js'
      AWS_EBS_APPLICATION: 'Piperks-backend'
      AWS_EBS_ENVIRONMENT: 'staging'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Get environment variable from aws ssm
        uses: Bardavon-Health/actions-aws-ssm-params-to-env@v1.2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        with:
          ssm-path: /${{ env.BUILD_STAGE }}/${{ env.BUILD_APP }}/STAGING_ENV
          prefix: null
          decryption: true
          
      - name: Output Bardavon Actions
        run: echo $STAGING_ENV
      
      - name: Prepare .env file
        uses: nohmad/aws-ssm-parameter-store-action@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          path: /${{ env.BUILD_STAGE }}/${{ env.BUILD_APP }}/STAGING_ENV
          format: dotenv
          filename: .env

      - name: Create .env file
        id: create-env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_API_KEYS_JSON: ${{ env.API_KEYS_JSON }}
          envkey_API_KEYS: ${{ toJSON(env.API_KEYS_JSON) }}
          envkey_SANDBOX_MODE: false
          envkey_DEMO_MODE: false
          envkey_PLAYGROUND: false
          envkey_API_DOCS_PATH: /docs
          fail_on_empty: true
          
      - name: Read .env file contents
        run: |
          echo "Contents of .env file:"
          cat .env

      - name: Save .env file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-file
          path: .env
