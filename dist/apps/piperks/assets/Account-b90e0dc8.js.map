{"version":3,"file":"Account-b90e0dc8.js","sources":["../../../../libs/ui-components/src/components/EmailContactButton.vue","../../../../libs/ui-components/src/assets/images/whatsapp.svg","../../../../libs/ui-components/src/components/WhatsappContactButton.vue","../../../../libs/ui-components/src/components/AccountHeader.vue","../../../../apps/piperks/src/api/account.ts","../../../../apps/piperks/src/views/Account/Account.vue"],"sourcesContent":["<template>\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    :href=\"`mailto:${receiver_email}?subject=${subject ? encodeURIComponent(subject) : ''}&cc=${cc ? encodeURIComponent(cc) : ''}&body=${\n      body ? encodeURIComponent(body) : ''\n    }`\"\n    data-cy=\"contact-email-anchor\"\n  >\n    <button v-wave class=\"w-full rounded-md border-2 border-black px-5 py-4\" data-cy=\"contact_email\">\n      <div class=\"flex gap-x-2 items-center justify-center\">\n        <span>\n          <font-awesome-icon icon=\"fa-solid fa-envelope\" :style=\"{ color: '#3b5998' }\" />\n        </span>\n        <span class=\"text-base\"> {{ $t('Settings.SupportViaEmail') }}</span>\n      </div>\n    </button>\n  </a>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { MessageBody, i18n } from '@pi-xcels/utils';\nimport type { UserReceiptsQuery } from '../../../graphql-codegen/graphql';\n\nconst { t } = i18n.global;\nconst translationData = {\n  typeMessage: t('Message.TypeMessage'),\n  helpTroubleshoot: t('Message.HelpTroubleshoot'),\n  phoneModel: t('Message.PhoneModel'),\n  phoneOS: t('Message.PhoneOS'),\n  browserVersion: t('Message.BrowserVersion'),\n  registeredId: t('Message.RegisteredID'),\n  latestReceipt: t('Message.LatestReceipt'),\n};\nconst props = defineProps<{\n  browserData: any;\n  senderEmail: any;\n  phone: any;\n  receipt: NonNullable<UserReceiptsQuery['userReceipts']>;\n  accountType: any;\n  receiver_email: any;\n  cc: any;\n  subject: any;\n}>();\n\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst body = ref(\n  // eslint-disable-next-line vue/no-setup-props-destructure\n  MessageBody('whatsapp', props.browserData, props.receipt, translationData, { email: props.senderEmail, phoneNo: props.phone, accountType: props.accountType })\n);\ndefineExpose({ body });\n</script>\n","export default \"__VITE_ASSET__042e12f8__\"","<template>\n  <button v-wave data-cy=\"contact_whatsapp\" class=\"w-full rounded-md border-2 border-black px-5 py-4\" @click=\"whatsappClick\">\n    <div class=\"flex gap-x-2 items-center justify-center\">\n      <span>\n        <img :src=\"whatsappIcon\" class=\"min-w-[24px]\" alt=\"Whatsapp icon\" />\n      </span>\n      <span class=\"text-base\"> {{ $t('Settings.SupportViaWhatsApp') }} </span>\n    </div>\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { MessageBody, i18n } from '@pi-xcels/utils';\nimport type { UserReceiptsQuery } from '../../../graphql/types';\nimport whatsappIcon from '../assets/images/whatsapp.svg';\n\nconst { t } = i18n.global;\n\nconst translationData = {\n  typeMessage: t('Message.TypeMessage'),\n  helpTroubleshoot: t('Message.HelpTroubleshoot'),\n  phoneModel: t('Message.PhoneModel'),\n  phoneOS: t('Message.PhoneOS'),\n  browserVersion: t('Message.BrowserVersion'),\n  registeredId: t('Message.RegisteredID'),\n  latestReceipt: t('Message.LatestReceipt'),\n};\n\nconst props = defineProps<{\n  browserData: any;\n  senderEmail: any;\n  phone: any;\n  receipt: NonNullable<UserReceiptsQuery['userReceipts']>;\n  accountType: any;\n  whatsappNumber: any;\n}>();\n\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst body = MessageBody('whatsapp', props.browserData, props.receipt, translationData, {\n  email: props.senderEmail,\n  phoneNo: props.phone,\n  accountType: props.accountType,\n});\n\nconst whatsappClick = () => {\n  window.open(`https://wa.me/${props.whatsappNumber}?text=${encodeURIComponent(body)}`, '_blank');\n};\n</script>\n","<template>\n  <div class=\"flex\">\n    <div data-cy=\"account_avatar\" class=\"\">\n      <img\n        class=\"gfold:w-16 gfold:h-16 w-20 h-20 border-1 rounded-full\"\n        :src=\"imageSrc\"\n        alt=\"Rounded avatar\"\n        @load=\"imageLoad\"\n        v-show=\"imageLoaded\"\n        data-cy=\"profile-picture\"\n        referrerpolicy=\"no-referrer\"\n      />\n\n      <div\n        v-if=\"!imageSrc || !imageLoaded\"\n        class=\"gfold:w-16 gfold:h-16 w-20 h-20 border-1 rounded-full bg-[#bdbdbd] flex justify-center items-center\"\n        data-cy=\"alternative-profile-picture\"\n      >\n        <div>\n          <font-awesome-icon icon=\"fa-solid fa-user\" style=\"color: white\" size=\"3x\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col gfold:gap-y-1 gap-y-4 gfold:px-4 px-8 self-center text-left\">\n      <h5 class=\"font-poppins font-bold gfold:text-lg text-xl\" data-cy=\"account_username\">{{ name }}</h5>\n      <h5 class=\"subtitle text-sm\">{{ $t('Settings.ProfileCompleteText') }} <span></span></h5>\n    </div>\n  </div>\n  <Divider :margin=\"'mt-5'\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\ndefineProps<{\n  name: string;\n  imageSrc?: string;\n}>();\nconst imageLoaded = ref(false);\nconst imageLoad = () => {\n  imageLoaded.value = true;\n};\n\ndefineExpose({ imageLoad, imageLoaded });\n</script>\n","import { apolloClient, handleApolloMutationResponse } from '@/utils/apollo';\nimport { deleteUserDataMutation } from '@pi-xcels/graphql';\nimport { MutationKeys } from '@pi-xcels/graphql/constants';\nimport { DeleteUserDataMutationVariables } from '@pi-xcels/graphql/types';\nimport { useMutation } from '@tanstack/vue-query';\n\n// TODO: add hooks for error handling for every single mutation/query\nconst useDeleteUser = () => {\n  return useMutation({\n    mutationKey: [MutationKeys.DeleteUserData],\n    mutationFn: ({ variables }: { variables: DeleteUserDataMutationVariables }) =>\n      apolloClient\n        .mutate({\n          mutation: deleteUserDataMutation,\n          variables,\n        })\n        .then(handleApolloMutationResponse),\n  });\n};\n\nexport { useDeleteUser };\n","<template>\n  <div class=\"p-6 pb-20\">\n    <div v-if=\"!userDataIsLoaded\" name=\"skeleton\">\n      <AccountSkeleton />\n    </div>\n    <div v-else name=\"main-content\">\n      <AccountHeader :name=\"userState.name || $t('Settings.Name')\" :image-src=\"userState.picture\" />\n      <AccountSubheader :title=\"'AccountInformation'\" :subtitle=\"'EnterDetailsText'\" :dataCy=\"'account_information'\" />\n\n      <div ref=\"detailInputRef\" class=\"py-5\">\n        <div>\n          <div class=\"py-1.5 flex gfold:text-sm justify-between items-center\">\n            <div class=\"min-w-[24px]\" style=\"color: gray\">\n              <font-awesome-icon icon=\"fa-solid fa-user\" />\n            </div>\n            <div v-if=\"validateTextInput('name')\" class=\"flex w-full items-center gfold:gap-x-2 gap-x-4\">\n              <div data-cy=\"name_text\">\n                {{ userState.name || $t('Settings.Name') }}\n              </div>\n              <AccountEditButton label=\"name\" @clicked=\"setEnableTextInput('name')\" dataCy=\"name_edit\">\n                {{ $t(editText(userState.name)) }}\n              </AccountEditButton>\n            </div>\n            <AccountInput v-else :label=\"$t('Settings.Name')\" v-model=\"userState.name\" @change=\"handleChange($event, 'name')\" dataCy=\"name_input\" />\n          </div>\n          <Divider v-if=\"validateTextInput('name')\" />\n        </div>\n        <div class=\"py-1.5 flex gfold:text-sm justify-between items-center\">\n          <div class=\"min-w-[24px]\" style=\"color: gray\">\n            <font-awesome-icon icon=\"fa-solid fa-envelope\" />\n          </div>\n          <div v-if=\"validateTextInput('email')\" class=\"flex w-full items-center gfold:gap-x-2 gap-x-4\">\n            <div data-cy=\"email_text\">{{ userState.email || $t('Settings.Email') }}</div>\n            <AccountEditButton @clicked=\"setEnableTextInput('email')\" label=\"email\" :account_type=\"userState.accountType\" dataCy=\"email-edit-button\">\n              {{ $t(editText(userState.email)) }}\n            </AccountEditButton>\n          </div>\n          <AccountInput v-else label=\"Email\" icon=\"envelope\" v-model=\"userState.email\" @change=\"handleChange($event, 'email')\" dataCy=\"email-input\" />\n        </div>\n        <Divider v-if=\"validateTextInput('email')\" />\n        <div class=\"py-1.5 flex gfold:text-sm justify-between items-center\">\n          <div class=\"min-w-[24px]\" style=\"color: gray\">\n            <font-awesome-icon icon=\"fa-solid fa-phone\" />\n          </div>\n          <div v-if=\"validateTextInput('phone')\" class=\"flex w-full items-center justify-between\">\n            <div data-cy=\"phone_text\" class=\"whitespace-normal\">\n              {{ userState.phoneNo || $t('Settings.Phone') }}\n            </div>\n            <AccountEditButton @clicked=\"setEnableTextInput('phone')\" label=\"phone\" :account_type=\"userState.accountType\" dataCy=\"phone-edit-button\">\n              {{ $t(editText(userState.phoneNo)) }}\n            </AccountEditButton>\n          </div>\n          <div class=\"flex flex-grow\" v-else>\n            <AccountInput @change=\"handlePhone\" label=\"Phone\" v-model=\"phone_no\" dataCy=\"phone-input\">\n              <InputSelect :value=\"phoneCode\" v-model=\"phone_code\" :selected=\"phone_code\" dataCy=\"phone-code-input\" />\n            </AccountInput>\n          </div>\n        </div>\n        <Divider v-if=\"validateTextInput('phone')\" />\n        <div class=\"py-1.5 flex gfold:text-sm justify-between items-center\">\n          <div class=\"min-w-[24px]\" style=\"color: gray\">\n            <font-awesome-icon icon=\"fa-solid fa-restroom\" />\n          </div>\n          <div class=\"flex w-full items-center gfold:gap-x-2 gap-x-4\">\n            <div data-cy=\"gender_text\">\n              {{ $t(`Settings.${userState.gender || 'Gender'}`) }}\n            </div>\n            <AccountEditButton @click=\"setEnableTextInput('gender')\" data-cy=\"gender_edit\" label=\"gender\">\n              {{ $t(editText(userState.gender)) }}\n            </AccountEditButton>\n          </div>\n        </div>\n        <AccountInput\n          v-if=\"!validateTextInput('gender')\"\n          :class=\"'pl-5 '\"\n          label=\"Gender\"\n          @change=\"handleChange($event, 'gender')\"\n          :value=\"options.gender()\"\n          v-model=\"userState.gender\"\n          dataCy=\"gender_input\"\n        />\n        <Divider v-if=\"validateTextInput('gender')\" />\n        <div class=\"py-1.5 flex gfold:text-sm justify-between items-center\">\n          <div class=\"min-w-[24px]\" style=\"color: gray\">\n            <font-awesome-icon icon=\"fa-solid fa-cake-candles\" />\n          </div>\n          <div v-if=\"validateTextInput('dob')\" class=\"flex w-full items-center gfold:gap-x-2 gap-x-4\">\n            <div data-cy=\"dob_text\">\n              {{ userState.dob ? convertDate(new Date(userState.dob)) : $t('Settings.Dob') }}\n            </div>\n            <AccountEditButton @click=\"openModal('date')\" data-cy=\"dob_edit\" label=\"dob\">\n              {{ $t(editText(userState.dob)) }}\n            </AccountEditButton>\n          </div>\n        </div>\n        <Divider v-if=\"validateTextInput('dob')\" />\n      </div>\n\n      <AccountSubheader :title=\"'LocationAndLanguage'\" :subtitle=\"'DisplayLanguage'\" />\n      <div class=\"py-8\">\n        <div class=\"py-2 flex\">\n          <div class=\"flex w-full items-center gfold:text-sm gfold:gap-x-3 gap-x-4\">\n            <div class=\"min-w-[24px]\">\n              <font-awesome-icon icon=\"fa-solid fa-flag\" />\n            </div>\n            <div>{{ $t('Settings.Country') }}</div>\n            <div class=\"flex ml-auto gap-x-2 items-center\">\n              <span data-cy=\"user-basecountry\">{{ userCountry }}</span>\n              <span data-cy=\"basecountry-explanation-button\" class=\"text-slate-400 hover:text-black cursor-pointer\" @click=\"showCountryExplanation = true\">\n                <font-awesome-icon icon=\"fa-regular fa-circle-question\" />\n              </span>\n            </div>\n          </div>\n        </div>\n        <Divider />\n        <div class=\"py-2 flex\">\n          <div class=\"flex w-full items-center gfold:text-sm gfold:gap-x-3 gap-x-4\">\n            <div class=\"min-w-[24px]\">\n              <font-awesome-icon icon=\"fa-solid fa-globe\" />\n            </div>\n            <div>{{ $t('Settings.Language') }}</div>\n            <div class=\"ml-auto\">\n              <InputSelect\n                :dataCy=\"'language_select'\"\n                :class=\"'bg-transparent text-right gfold:w-[107px] '\"\n                :value=\"langs\"\n                @change=\"handleChange($event, 'language')\"\n                v-model=\"userState.language\"\n              />\n            </div>\n          </div>\n        </div>\n        <Divider />\n      </div>\n      <AccountSubheader :title=\"'Notification'\" :subtitle=\"'GetUpdates'\" />\n      <div class=\"py-4\">\n        <div>\n          <div class=\"flex py-1 flex-col\">\n            <span class=\"text-sm font-semibold\">{{ $t('Settings.ReceiptAlerts') }}</span>\n            <span class=\"text-xs\">{{ $t('Settings.NotifiedLatestReceiptsAndUpdates') }}</span>\n          </div>\n          <div class=\"mt-5 flex\">\n            <div class=\"flex w-full items-center gap-x-4 p-1\">\n              <div>{{ $t('Settings.PushNotification') }}</div>\n              <div class=\"ml-auto\">\n                <InputToggle\n                  :dataCy=\"'notification_toggle'\"\n                  :name=\"'pushNotification'\"\n                  :checked=\"toggleState.pushNotification\"\n                  @on-toggle=\"handleSwitch\"\n                  colorHead=\"#219653\"\n                  colorBar=\"#95cc97\"\n                />\n              </div>\n            </div>\n          </div>\n          <Divider />\n        </div>\n      </div>\n      <div class=\"flex flex-col mt-5 px-5 gap-y-5\">\n        <button\n          v-if=\"!isStandalone() && !PWAInstalled && !isIos\"\n          class=\"drop-shadow-lg bg-green-500 rounded-md\"\n          @click=\"addToHomeScreen\"\n          data-cy=\"install_pwa_button\"\n        >\n          <div class=\"flex justify-center gap-x-2 p-2 text-white font-poppins\">\n            {{ $t('Settings.PwaInstallButton') }}\n            <span>\n              <font-awesome-icon icon=\"fa-solid fa-download\" />\n            </span>\n          </div>\n        </button>\n        <button v-wave class=\"drop-shadow-lg bg-primary-yellow rounded-md\" @click=\"openModal('contact')\" data-cy=\"contact_support_button\">\n          <div class=\"flex justify-center gap-x-2 p-2 text-[#4F4F4F] font-poppins\">\n            {{ $t('Settings.ContactSupportButton') }}\n            <span>\n              <font-awesome-icon icon=\"fa-solid fa-user-group\" />\n            </span>\n          </div>\n        </button>\n        <button v-wave class=\"drop-shadow-lg bg-primary-red rounded-md\" @click=\"onLogout()\">\n          <div class=\"flex justify-center gap-x-2 p-2 text-white font-poppins\" data-cy=\"logout_button\">\n            {{ $t('Settings.LogoutButton') }}\n            <span><font-awesome-icon icon=\"fa-solid fa-right-from-bracket\" /></span>\n          </div>\n        </button>\n        <button class=\"underline text-sm underline-offset-1\" @click=\"onLogout(true)\" v-if=\"featureState.sandboxMode\">\n          <div class=\"justify-center -mt-3 gap-x-2 text-primary-red font-poppins\" data-cy=\"delete_account_button\">Delete Account</div>\n        </button>\n        <div v-if=\"featureState.demoMode && !featureState.sandboxMode\" class=\"flex\">\n          <p class=\"ml-auto text-sm text-gray-500\" data-cy=\"demo-version-text\">Demo Version</p>\n        </div>\n        <div v-if=\"featureState.sandboxMode\" class=\"flex\">\n          <p class=\"ml-auto text-sm text-gray-500\" data-cy=\"sandbox-version-text\">Sandbox Version</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ModalBackdrop @on-close=\"closeModal('date')\" :show=\"showModal.date\" :margin=\"''\" :padding=\"''\">\n    <Datepicker\n      data-cy=\"dob_input\"\n      inline\n      autoApply\n      :enable-time-picker=\"false\"\n      ref=\"datepicker\"\n      :modelValue=\"userState.dob ? new Date(userState.dob) : new Date(new Date().getFullYear() - 20, 0, 1)\"\n      :locale=\"userState.language || browserLanguage || 'en'\"\n      @update:model-value=\"handleDate\"\n      :maxDate=\"new Date()\"\n    />\n  </ModalBackdrop>\n  <ModalBackdrop @on-close=\"closeModal('contact')\" :show=\"showModal.contact\" :margin=\"''\" :padding=\"'p-6'\">\n    <ContactSupportModal\n      :browserData=\"browserData\"\n      :senderEmail=\"userState.email\"\n      :phone=\"userState.phoneNo\"\n      :receipt=\"userReceipts\"\n      :accountType=\"userState.accountType\"\n      :contactSupport=\"userState?.countrySupport\"\n    />\n  </ModalBackdrop>\n  <PushNotificationModal :show=\"showInstructionModal.pushNotification\" @close-modal=\"closeModal('pushNotification')\" />\n  <BaseCountryModal\n    :show=\"showCountryExplanation\"\n    :email=\"userState.email\"\n    :phoneNo=\"userState.phoneNo\"\n    :translation-data=\"translationData\"\n    :accountType=\"userState.accountType\"\n    :name=\"userState.name\"\n    :userCountry=\"userCountry\"\n    @close-modal=\"showCountryExplanation = false\"\n  />\n  <AppLoader v-if=\"isDeletingUser\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { useDeleteUser } from '@/api/account';\nimport { useUserReceipt } from '@/api/receipt';\nimport { useUpdateUserInfo } from '@/api/user';\nimport { useAlertStore } from '@/stores/alert';\nimport { useFeatureStore } from '@/stores/feature';\nimport { useUserStore } from '@/stores/user';\nimport { useAuthManager } from '@/utils/auth';\nimport { useBrowserData } from '@/utils/hooks/useBrowserData';\nimport { useModalErrorMsg } from '@/utils/hooks/useErrorHandling';\nimport { useLanguageManager } from '@/utils/language';\nimport { useLocalStorageManager } from '@/utils/localstorage';\nimport { debugLog } from '@/utils/logger';\nimport { useNotificationManager } from '@/utils/notification';\nimport { safeJsonParse } from '@pi-xcels/utils';\nimport * as Sentry from '@sentry/vue';\nimport Datepicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport { computed, onMounted, onUnmounted, reactive, readonly, ref, watch, watchEffect } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nconst isQueryInNavigator = computed(() => 'permissions' in navigator && 'query' in navigator.permissions);\nconst browserLanguage = navigator.language || (navigator as any).userLanguage;\n\nconst AuthManager = useAuthManager();\nconst LanguageManager = useLanguageManager();\nconst NotificationManager = useNotificationManager();\nconst LocalStorageManager = useLocalStorageManager();\nconst { isAuthenticated, userDataIsLoaded } = AuthManager;\nconst { t } = useI18n();\nconst alertState = useAlertStore();\nconst featureState = useFeatureStore();\nconst userState = useUserStore();\n\nconst langs = computed(() =>\n  LanguageManager.availableLanguages.value.map((locale: string, index: number) => {\n    return {\n      value: locale,\n      label: LanguageManager.availableLanguagesLabels.value[index],\n    };\n  })\n);\nconst phoneCode = [\n  { value: '+62', label: '+62' },\n  { value: '+65', label: '+65' },\n  { value: '+91', label: '+91' },\n  { value: '+1', label: '+1' },\n  { value: '+82', label: '+82' },\n];\n\n// Use JS built-in Intl, to get country name from baseCountry abbreviation\n// eg: \"id\" is Indonesia in english and indonesian, 인도네시아 in korean.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames\nconst regionNames = computed(() => new Intl.DisplayNames([userState.language || browserLanguage || 'en-US'], { type: 'region' }));\n\nconst userCountry = computed(() => {\n  const abbrev = userState.baseCountry;\n  return regionNames.value.of(abbrev.toUpperCase());\n});\n\nconst { mutateAsync: updateUserInfo, error: updateUserInfoError } = useUpdateUserInfo();\nuseModalErrorMsg(\n  updateUserInfoError,\n  readonly(\n    ref({\n      id: 'update-user-info-error',\n      title: t('Error.AccountUpdateFailed.Title', { provider: 'Facebook' }),\n      body: t('Error.AccountUpdateFailed.Body'),\n      btnTxt: t('Error.BtnTextOK'),\n      btnAction() {\n        alertState.removeAlertMessage('update-user-info-error');\n      },\n    })\n  )\n);\n\nconst showModal = reactive({ date: false, contact: false });\nconst toggleState = reactive({ pushNotification: false, geoLocation: false });\nconst showInstructionModal = reactive({ pushNotification: false, geoLocation: false });\nconst options = reactive({\n  country() {\n    return [\n      { value: 'Singapore', label: t('Settings.Singapore') },\n      { value: 'Indonesia', label: t('Settings.Indonesia') },\n      { value: 'Malaysia', label: t('Settings.Malaysia') },\n      { value: 'Korea', label: t('Settings.SouthKorea') },\n    ];\n  },\n  gender() {\n    return [\n      {\n        value: 'Male',\n        label: t('Settings.Male'),\n      },\n      {\n        value: 'Female',\n        label: t('Settings.Female'),\n      },\n      {\n        value: 'Other',\n        label: t('Settings.Other'),\n      },\n    ];\n  },\n});\n\nconst detailInputRef = ref<null | HTMLElement>(null);\nconst enableTextInput = ref<string | null>(null);\nconst datepicker = ref<any>(null);\nconst phone_no = ref('');\nconst phone_code = ref('+62');\nconst showCountryExplanation = ref(false);\n\nconst translationData = {\n  name: t('Settings.Name'),\n  registeredId: t('Message.RegisteredID'),\n};\nconst isGeoLocationGranted = ref(false);\n\nconst { browserData, isIos } = useBrowserData();\nconst PWAInstalled = computed(() => safeJsonParse(LocalStorageManager.PWAInstalled.value) || false);\n\nconst { data: userReceiptsData } = useUserReceipt(\n  computed(() => ({\n    offset: 0,\n    limit: 1,\n    filter: {\n      orderBy: null,\n      sortBy: null,\n      date: [null, null],\n      store: [],\n    },\n  })),\n  {\n    enabled: isAuthenticated,\n  }\n);\nconst userReceipts = computed(() => userReceiptsData.value?.pages[0]?.userReceipts ?? []);\n\nconst { mutateAsync: deleteUser, isLoading: isDeletingUser } = useDeleteUser();\nconst onLogout = async (shouldDeleteAccount: boolean = false) => {\n  userState.$reset();\n  if (!featureState.isReady) {\n    Sentry.captureMessage('Feature store is not ready when logout, demoConfig is not loaded');\n  }\n  if ((featureState.demoConfig?.purgeUserOnLogout && featureState.demoMode && !featureState.sandboxMode) || shouldDeleteAccount) {\n    await deleteUser({ variables: { data: { ref: '', type: 'user' } } });\n  }\n\n  AuthManager.piperksLogout();\n};\n\nconst closeModal = (label: 'date' | 'contact' | 'geoLocation' | 'pushNotification') => {\n  switch (label) {\n    case 'date':\n      showModal.date = false;\n      break;\n    case 'contact':\n      showModal.contact = false;\n      break;\n    case 'geoLocation':\n      showInstructionModal.geoLocation = false;\n      break;\n    case 'pushNotification':\n      showInstructionModal.pushNotification = false;\n      break;\n    default:\n  }\n};\n\nconst handlePhone = (event: Event & { target: HTMLInputElement }) => {\n  if (event.target?.type == 'select-one') {\n    phone_code.value = event.target.value;\n  } else {\n    setEnableTextInput(null);\n    phone_no.value = event.target.value;\n    userState.phoneNo = `${phone_code.value}${event.target.value}`;\n    updateUserInfo({ variables: { data: { phoneNo: userState.phoneNo } } });\n  }\n};\n\nconst extractPhone = (phone: string) => {\n  return {\n    code: phone.substring(0, 2) === '+1' ? '+1' : phone.substring(0, 3),\n    number: phone.substring(0, 2) === '+1' ? phone.slice(2) : phone.slice(3),\n  };\n};\n\nconst handleChange = (event: Event, field: string) => {\n  setEnableTextInput(null);\n\n  const variables = { [field]: (event.target as HTMLInputElement)?.value };\n  updateUserInfo({ variables: { data: variables } });\n};\n\nconst handleOutsideClick = ({ target }: MouseEvent): void => {\n  // Close edit field when clicking outside of the edit field element.\n  if (detailInputRef.value?.contains(target as Node)) {\n    return;\n  }\n\n  setEnableTextInput(null);\n};\n\nconst setEnableTextInput = (label: string | null) => {\n  enableTextInput.value = label;\n};\n\nconst validateTextInput = (label: string | null) => {\n  return enableTextInput.value !== label;\n};\n\nconst editText = (dataIsSet: null | string): string => {\n  return dataIsSet ? 'Settings.Edit' : 'Settings.SetNow';\n};\n\nconst openModal = (label: string) => {\n  if (label === 'date') showModal.date = true;\n  else showModal.contact = true;\n\n  setEnableTextInput(null);\n};\n\nconst addToHomeScreen = () => {\n  // Hide the app provided install promotion\n  if ((window as any).deferredPrompt) {\n    // Show the install prompt\n    (window as any).deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    (window as any).deferredPrompt.userChoice.then((choiceResult: any) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the install prompt');\n      } else {\n        console.log('User dismissed the install prompt');\n      }\n    });\n  }\n};\n\nconst isStandalone = () => {\n  // For iOS\n  // @ts-expect-error\n  if (window.navigator?.standalone) return true;\n  // For Android\n  if (window.matchMedia('(display-mode: standalone)').matches) return true;\n  // If neither is true, it's not installed\n  return false;\n};\n\nconst convertDate = (date: Date) => {\n  const locale = userState.language || browserLanguage || 'en';\n\n  return date.toLocaleDateString(locale === 'en' || locale === 'en-US' ? 'en-GB' : locale, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n};\n\nconst handleDate = (modelData: Date) => {\n  datepicker.value.closeMenu();\n  showModal.date = false;\n\n  const date = new Date(modelData.getTime() + Math.abs(modelData.getTimezoneOffset() * 60000));\n  if (date) {\n    userState.dob = date.toDateString();\n    updateUserInfo({ variables: { data: { dob: date } } });\n  }\n};\n\nconst getCurrentPosition = async () => {\n  const permission = await navigator.permissions.query({\n    name: 'geolocation',\n  });\n\n  const { state } = permission;\n  switch (state) {\n    case 'granted':\n      isGeoLocationGranted.value = true;\n      toggleState.geoLocation = true;\n      break;\n    case 'denied':\n      showInstructionModal.geoLocation = true;\n      toggleState.geoLocation = false;\n      break;\n    case 'prompt':\n      navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {\n        debugLog('geoSuccess -> position.coords.latitude', position.coords.latitude);\n        debugLog('geoSuccess -> position.coords.longitude', position.coords.longitude);\n      });\n      break;\n  }\n\n  addPermissionsChanges('geoLocation', state);\n\n  permission.onchange = () => {\n    switch (permission.state) {\n      case 'granted':\n        toggleState.geoLocation = true;\n        isGeoLocationGranted.value = true;\n        break;\n      case 'denied':\n        toggleState.geoLocation = false;\n        showInstructionModal.geoLocation = true;\n        break;\n    }\n\n    addPermissionsChanges('geoLocation', permission.state);\n  };\n};\n\nconst handleSwitch = (e: Event) => {\n  const { name, checked } = e.target as HTMLInputElement;\n  switch (name) {\n    case 'pushNotification':\n      toggleState.pushNotification = true;\n      if (!NotificationManager.isNotificationGranted()) {\n        NotificationManager.requestNotificationPermission({\n          disallowedCallback: () => {\n            toggleState.pushNotification = false;\n            showInstructionModal.pushNotification = true;\n          },\n          allowedCallback: () => {\n            toggleState.pushNotification = true;\n            updateUserInfo({ variables: { data: { pushNotificationEnabled: toggleState.pushNotification } } });\n          },\n        });\n      } else {\n        toggleState.pushNotification = checked;\n        updateUserInfo({ variables: { data: { pushNotificationEnabled: toggleState.pushNotification } } });\n      }\n      break;\n    case 'geoLocation':\n      if (isQueryInNavigator.value && !isGeoLocationGranted.value) {\n        toggleState.geoLocation = true;\n        getCurrentPosition();\n      } else {\n        toggleState.geoLocation = checked;\n        updateUserInfo({ variables: { data: { geoLocationEnabled: toggleState.geoLocation } } });\n      }\n      break;\n  }\n};\n\nconst addPermissionsChanges = (name: 'geoLocation', type: NotificationPermission | PermissionState) => {\n  switch (name) {\n    case 'geoLocation':\n      if (type !== 'prompt') {\n        updateUserInfo({\n          variables: {\n            data: {\n              geoLocationEnabled: type === 'granted',\n            },\n          },\n        });\n      }\n      break;\n  }\n};\n\nwatchEffect(() => {\n  document.documentElement.style.overflow = showModal.date || showModal.contact ? 'hidden' : 'auto';\n});\n\nwatchEffect(() => {\n  if (userState.phoneNo) {\n    const { code, number } = extractPhone(userState.phoneNo);\n    phone_code.value = code;\n    phone_no.value = number;\n  }\n});\n\nwatch(\n  [isQueryInNavigator, userState],\n  async ([newIsQueryInNavigatorValue, newUserStateValue]) => {\n    let status;\n    if (newIsQueryInNavigatorValue) {\n      const permission = await navigator.permissions.query({\n        name: 'geolocation',\n      });\n\n      addPermissionsChanges('geoLocation', permission.state);\n      status = permission.state === 'granted';\n      isGeoLocationGranted.value = status;\n    }\n    if (newUserStateValue.id) {\n      toggleState.geoLocation = Boolean(status) && Boolean(newUserStateValue.geoLocationEnabled);\n      toggleState.pushNotification = NotificationManager.isNotificationGranted() && newUserStateValue.pushNotificationEnabled;\n    }\n  },\n  {\n    deep: true,\n  }\n);\n\nonMounted(() => {\n  document.addEventListener('mousedown', handleOutsideClick);\n});\n\nonUnmounted(() => {\n  document.removeEventListener('mousedown', handleOutsideClick);\n});\n</script>\n"],"names":["t","cov_qpowchtgg","s","i18n","global","translationData","typeMessage","helpTroubleshoot","phoneModel","phoneOS","browserVersion","registeredId","latestReceipt","whatsappIcon","_defineComponent","__props","__expose","cov_w8bphga9k","imageLoaded","ref","imageLoad","f","value","cov_7xiyoykab","actualCoverage","useDeleteUser","useMutation","mutationKey","MutationKeys","DeleteUserData","mutationFn","variables","apolloClient","mutate","mutation","deleteUserDataMutation","cov_b3itv1jkq","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_createElementVNode","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_sfc_main","isQueryInNavigator","computed","b","navigator","permissions","browserLanguage","language","userLanguage","AuthManager","useAuthManager","LanguageManager","useLanguageManager","NotificationManager","useNotificationManager","LocalStorageManager","useLocalStorageManager","isAuthenticated","userDataIsLoaded","useI18n","alertState","useAlertStore","featureState","useFeatureStore","userState","useUserStore","langs","availableLanguages","map","locale","index","label","availableLanguagesLabels","phoneCode","regionNames","Intl","DisplayNames","type","userCountry","abbrev","baseCountry","of","toUpperCase","mutateAsync","updateUserInfo","error","updateUserInfoError","useUpdateUserInfo","useModalErrorMsg","readonly","id","title","provider","body","btnTxt","btnAction","removeAlertMessage","showModal","reactive","date","contact","toggleState","pushNotification","geoLocation","showInstructionModal","options","country","gender","detailInputRef","enableTextInput","datepicker","phone_no","phone_code","showCountryExplanation","name","isGeoLocationGranted","browserData","isIos","useBrowserData","PWAInstalled","safeJsonParse","data","userReceiptsData","useUserReceipt","offset","limit","filter","orderBy","sortBy","store","enabled","userReceipts","pages","deleteUser","isLoading","isDeletingUser","onLogout","shouldDeleteAccount","$reset","isReady","Sentry","demoConfig","purgeUserOnLogout","demoMode","sandboxMode","piperksLogout","closeModal","handlePhone","event","target","setEnableTextInput","phoneNo","extractPhone","phone","code","substring","number","slice","handleChange","field","handleOutsideClick","contains","validateTextInput","editText","dataIsSet","openModal","addToHomeScreen","window","deferredPrompt","prompt","userChoice","then","choiceResult","outcome","console","log","isStandalone","standalone","matchMedia","matches","convertDate","toLocaleDateString","year","month","day","handleDate","modelData","closeMenu","Date","getTime","Math","abs","getTimezoneOffset","dob","toDateString"],"mappings":"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"}