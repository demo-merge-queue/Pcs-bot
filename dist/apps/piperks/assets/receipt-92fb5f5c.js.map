{"version":3,"file":"receipt-92fb5f5c.js","sources":["../../../../node_modules/just-clone/index.mjs","../../../../apps/piperks/src/utils/hooks/useIsMutationLoading.ts","../../../../apps/piperks/src/utils/receipt.ts"],"sourcesContent":["var collectionClone = clone;\n\n/*\n  Deep clones all properties except functions\n\n  var arr = [1, 2, 3];\n  var subObj = {aa: 1};\n  var obj = {a: 3, b: 5, c: arr, d: subObj};\n  var objClone = clone(obj);\n  arr.push(4);\n  subObj.bb = 2;\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4], d: {aa: 1}}\n  objClone; // {a: 3, b: 5, c: [1, 2, 3], d: {aa: 1, bb: 2}}\n*/\n\nfunction clone(obj) {\n  let result = obj;\n  var type = {}.toString.call(obj).slice(8, -1);\n  if (type == 'Set') {\n    return new Set([...obj].map(value => clone(value)));\n  }\n  if (type == 'Map') {\n    return new Map([...obj].map(kv => [clone(kv[0]), clone(kv[1])]));\n  }\n  if (type == 'Date') {\n    return new Date(obj.getTime());\n  }\n  if (type == 'RegExp') {\n    return RegExp(obj.source, getRegExpFlags(obj));\n  }\n  if (type == 'Array' || type == 'Object') {\n    result = Array.isArray(obj) ? [] : {};\n    for (var key in obj) {\n      // include prototype properties\n      result[key] = clone(obj[key]);\n    }\n  }\n  // primitives and non-supported objects (e.g. functions) land here\n  return result;\n}\n\nfunction getRegExpFlags(regExp) {\n  if (typeof regExp.source.flags == 'string') {\n    return regExp.source.flags;\n  } else {\n    var flags = [];\n    regExp.global && flags.push('g');\n    regExp.ignoreCase && flags.push('i');\n    regExp.multiline && flags.push('m');\n    regExp.sticky && flags.push('y');\n    regExp.unicode && flags.push('u');\n    return flags.join('');\n  }\n}\n\nexport {collectionClone as default};\n","import { MutationKeys } from '@pi-xcels/graphql/constants';\nimport { useIsMutating } from '@tanstack/vue-query';\nimport { computed } from 'vue';\n\nexport const useIsMutationLoading = (mutationKey: MutationKeys[]) => {\n  const mutationCount = useIsMutating({\n    mutationKey,\n  });\n  return computed(() => mutationCount.value > 0);\n};\n","import { useCurrentReceiptSubscription, useGetReceipt, useGetReceiptTemplate } from '@/api/receipt';\nimport { ENV } from '@/utils/env';\nimport { ApolloError } from '@apollo/client/core';\nimport * as Sentry from '@sentry/vue';\nimport { GraphQLError } from 'graphql';\nimport { decompressFromBase64 } from 'lz-string';\nimport { ComputedRef, Ref, computed, reactive, unref, watch } from 'vue';\nimport { LocationQueryValue } from 'vue-router';\nimport { useAuthManager } from './auth';\nimport { useLocalStorageManager } from './localstorage';\n\nexport function useSubscribeToReceipt({\n  transactionRefs,\n  mode,\n  enabled,\n}: { transactionRefs?: Ref<string[] | undefined>; mode?: Ref<string>; enabled?: Ref<boolean> } = {}) {\n  const currentReceiptSubscription = useCurrentReceiptSubscription(\n    computed(() =>\n      reactive({\n        transactionRefs: transactionRefs?.value,\n      })\n    ),\n    {\n      enabled: computed(() => mode?.value !== 'share' && (!enabled || enabled.value)),\n    }\n  );\n  const { isErrored, error, data } = currentReceiptSubscription;\n\n  watch([isErrored, error], ([isErrored, error]) => {\n    if (!error || !isErrored) return;\n    if (error instanceof ApolloError) {\n      const { graphQLErrors, networkError } = error;\n      if (ENV.DEV) console.error('Error: onError Current Receipt Subscription', graphQLErrors, networkError);\n      Sentry.captureException(error);\n    }\n    if (Array.isArray(error) && error[0] instanceof GraphQLError) {\n      Sentry.captureException(error);\n      error.forEach((e) => {\n        if (ENV.DEV) console.error('Error: onError Current Receipt Subscription', e);\n      });\n    }\n  });\n\n  const latestReceiptSubscription = computed(() => data.value?.currentReceipt);\n\n  return { ...currentReceiptSubscription, latestReceiptSubscription };\n}\n\nexport function useGetCurrentReceipt({\n  isAuthenticated,\n  isAnonymous,\n  transactionRef,\n  receiptMode,\n  enabled,\n}: {\n  isAuthenticated: ComputedRef<boolean>;\n  isAnonymous: ComputedRef<boolean>;\n  transactionRef?: Readonly<Ref<LocationQueryValue>>;\n  receiptMode?: Readonly<Ref<LocationQueryValue>>;\n  enabled: Readonly<Ref<boolean>>;\n}) {\n  const enableGetReceipt = computed(() => (unref(isAuthenticated) || unref(isAnonymous)) && enabled.value);\n\n  const getReceiptQuery = useGetReceipt(\n    computed(() =>\n      reactive({\n        where: {\n          ref: transactionRef,\n        },\n        mode: receiptMode,\n      })\n    ),\n    { enabled: enableGetReceipt },\n    // for invalidating the query when authenticated status changes\n    computed(() => reactive({ isAuthenticated, isAnonymous }))\n  );\n\n  return getReceiptQuery;\n}\n\nexport function useGetReceiptTemplateForCompany({ companyName, enabled }: { companyName: Ref<string>; enabled?: Ref<boolean> }) {\n  const LocalStorageManager = useLocalStorageManager();\n  const { isAuthenticated, isAnonymous } = useAuthManager();\n\n  const enabledGetReceipt = computed(() => !!companyName.value && (!enabled || enabled.value) && (unref(isAuthenticated) || unref(isAnonymous)));\n  const getReceiptTemplate = useGetReceiptTemplate(\n    computed(() =>\n      reactive({\n        where: { companyRef: companyName },\n      })\n    ),\n    {\n      enabled: enabledGetReceipt,\n      initialData: companyName.value\n        ? {\n            getReceiptTemplate: {\n              template: LocalStorageManager.getReceiptTemplateCache(companyName.value),\n            },\n          }\n        : undefined,\n    }\n  );\n  const { isSuccess, data, isLoading } = getReceiptTemplate;\n\n  const template = computed(() => {\n    const template = data.value?.getReceiptTemplate?.template;\n    return template ? decompressFromBase64(template) : undefined;\n  });\n\n  watch([isSuccess, template], ([isSuccess, template]) => {\n    if (!isSuccess || !template) return;\n    if (template) {\n      if (companyName.value) LocalStorageManager.setReceiptTemplateCache(companyName.value, template);\n    } else {\n      Sentry.captureMessage('Error: Template is missing for this receipt');\n      if (ENV.DEV) console.error('Error: Template is missing for this receipt', data);\n    }\n  });\n\n  // when API is enabled and no template is found for this company\n  const noTemplateFound = computed(() => enabledGetReceipt.value && !isLoading.value && !template.value);\n\n  watch([noTemplateFound], ([noTemplateFound]) => {\n    if (!noTemplateFound) return;\n    Sentry.captureMessage('Error: No receipt template found for this company: ' + companyName.value);\n    if (ENV.DEV) console.error('Error: No receipt template found for this company', companyName.value);\n  });\n\n  return { ...getReceiptTemplate, template, noTemplateFound };\n}\n\nexport function getCompanyLogoURL(logos: { [key: string]: string }) {\n  return logos?.svg || logos?.png || logos?.jpg || logos?.jpeg;\n}\n"],"names":["collectionClone","clone","obj","result","type","value","kv","getRegExpFlags","key","regExp","flags","cov_2fb9i9b98p","actualCoverage","s","useIsMutationLoading","mutationKey","f","mutationCount","useIsMutating","cov_6h2jcfqun","path","hash","global","gcv","coverageData","coverage","useSubscribeToReceipt","transactionRefs","mode","enabled","b","useCurrentReceiptSubscription","computed","reactive","isErrored","watch","error","isErrored2","error2","ApolloError","graphQLErrors","networkError","Sentry","Array","GraphQLError","forEach","e","console","latestReceiptSubscription","data","currentReceipt","currentReceiptSubscription","useGetCurrentReceipt","isAuthenticated","isAnonymous","transactionRef","receiptMode","enableGetReceipt","unref","getReceiptQuery","useGetReceipt","where","ref","useGetReceiptTemplateForCompany","companyName","LocalStorageManager","useLocalStorageManager","useAuthManager","enabledGetReceipt","getReceiptTemplate","useGetReceiptTemplate","companyRef","template","initialData","getReceiptTemplateCache","isSuccess","isLoading","template2","noTemplateFound","isSuccess2","setReceiptTemplateCache"],"mappings":"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A,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,wBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,uBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,kCAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,KAAA,oBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,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","x_google_ignoreList":[0]}